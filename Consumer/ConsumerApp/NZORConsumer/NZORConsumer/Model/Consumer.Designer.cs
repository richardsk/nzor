//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace NZORConsumer.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ConsumerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ConsumerEntities object using the connection string found in the 'ConsumerEntities' section of the application configuration file.
        /// </summary>
        public ConsumerEntities() : base("name=ConsumerEntities", "ConsumerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConsumerEntities object.
        /// </summary>
        public ConsumerEntities(string connectionString) : base(connectionString, "ConsumerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConsumerEntities object.
        /// </summary>
        public ConsumerEntities(EntityConnection connection) : base(connection, "ConsumerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HarvestScope> HarvestScopes
        {
            get
            {
                if ((_HarvestScopes == null))
                {
                    _HarvestScopes = base.CreateObjectSet<HarvestScope>("HarvestScopes");
                }
                return _HarvestScopes;
            }
        }
        private ObjectSet<HarvestScope> _HarvestScopes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HarvestScopeBiostatus> HarvestScopeBiostatus
        {
            get
            {
                if ((_HarvestScopeBiostatus == null))
                {
                    _HarvestScopeBiostatus = base.CreateObjectSet<HarvestScopeBiostatus>("HarvestScopeBiostatus");
                }
                return _HarvestScopeBiostatus;
            }
        }
        private ObjectSet<HarvestScopeBiostatus> _HarvestScopeBiostatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HarvestScopeName> HarvestScopeNames
        {
            get
            {
                if ((_HarvestScopeNames == null))
                {
                    _HarvestScopeNames = base.CreateObjectSet<HarvestScopeName>("HarvestScopeNames");
                }
                return _HarvestScopeNames;
            }
        }
        private ObjectSet<HarvestScopeName> _HarvestScopeNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NameProvider> NameProviders
        {
            get
            {
                if ((_NameProviders == null))
                {
                    _NameProviders = base.CreateObjectSet<NameProvider>("NameProviders");
                }
                return _NameProviders;
            }
        }
        private ObjectSet<NameProvider> _NameProviders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Provider> Providers
        {
            get
            {
                if ((_Providers == null))
                {
                    _Providers = base.CreateObjectSet<Provider>("Providers");
                }
                return _Providers;
            }
        }
        private ObjectSet<Provider> _Providers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Name> Names
        {
            get
            {
                if ((_Names == null))
                {
                    _Names = base.CreateObjectSet<Name>("Names");
                }
                return _Names;
            }
        }
        private ObjectSet<Name> _Names;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BiostatusOption> BiostatusOptions
        {
            get
            {
                if ((_BiostatusOptions == null))
                {
                    _BiostatusOptions = base.CreateObjectSet<BiostatusOption>("BiostatusOptions");
                }
                return _BiostatusOptions;
            }
        }
        private ObjectSet<BiostatusOption> _BiostatusOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Harvest> Harvests
        {
            get
            {
                if ((_Harvests == null))
                {
                    _Harvests = base.CreateObjectSet<Harvest>("Harvests");
                }
                return _Harvests;
            }
        }
        private ObjectSet<Harvest> _Harvests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BatchMatch> BatchMatches
        {
            get
            {
                if ((_BatchMatches == null))
                {
                    _BatchMatches = base.CreateObjectSet<BatchMatch>("BatchMatches");
                }
                return _BatchMatches;
            }
        }
        private ObjectSet<BatchMatch> _BatchMatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NameRequest> NameRequests
        {
            get
            {
                if ((_NameRequests == null))
                {
                    _NameRequests = base.CreateObjectSet<NameRequest>("NameRequests");
                }
                return _NameRequests;
            }
        }
        private ObjectSet<NameRequest> _NameRequests;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HarvestScopes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHarvestScopes(HarvestScope harvestScope)
        {
            base.AddObject("HarvestScopes", harvestScope);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HarvestScopeBiostatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHarvestScopeBiostatus(HarvestScopeBiostatus harvestScopeBiostatus)
        {
            base.AddObject("HarvestScopeBiostatus", harvestScopeBiostatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HarvestScopeNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHarvestScopeNames(HarvestScopeName harvestScopeName)
        {
            base.AddObject("HarvestScopeNames", harvestScopeName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NameProviders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNameProviders(NameProvider nameProvider)
        {
            base.AddObject("NameProviders", nameProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Providers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProviders(Provider provider)
        {
            base.AddObject("Providers", provider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Names EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNames(Name name)
        {
            base.AddObject("Names", name);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BiostatusOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBiostatusOptions(BiostatusOption biostatusOption)
        {
            base.AddObject("BiostatusOptions", biostatusOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Harvests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHarvests(Harvest harvest)
        {
            base.AddObject("Harvests", harvest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BatchMatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatchMatches(BatchMatch batchMatch)
        {
            base.AddObject("BatchMatches", batchMatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NameRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNameRequests(NameRequest nameRequest)
        {
            base.AddObject("NameRequests", nameRequest);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="BatchMatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BatchMatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BatchMatch object.
        /// </summary>
        /// <param name="matchId">Initial value of the MatchId property.</param>
        public static BatchMatch CreateBatchMatch(global::System.String matchId)
        {
            BatchMatch batchMatch = new BatchMatch();
            batchMatch.MatchId = matchId;
            return batchMatch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchId
        {
            get
            {
                return _MatchId;
            }
            set
            {
                if (_MatchId != value)
                {
                    OnMatchIdChanging(value);
                    ReportPropertyChanging("MatchId");
                    _MatchId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MatchId");
                    OnMatchIdChanged();
                }
            }
        }
        private global::System.String _MatchId;
        partial void OnMatchIdChanging(global::System.String value);
        partial void OnMatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSubmitted
        {
            get
            {
                return _DateSubmitted;
            }
            set
            {
                OnDateSubmittedChanging(value);
                ReportPropertyChanging("DateSubmitted");
                _DateSubmitted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSubmitted");
                OnDateSubmittedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSubmitted;
        partial void OnDateSubmittedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSubmittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DownloadUrl
        {
            get
            {
                return _DownloadUrl;
            }
            set
            {
                OnDownloadUrlChanging(value);
                ReportPropertyChanging("DownloadUrl");
                _DownloadUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DownloadUrl");
                OnDownloadUrlChanged();
            }
        }
        private global::System.String _DownloadUrl;
        partial void OnDownloadUrlChanging(global::System.String value);
        partial void OnDownloadUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultsFile
        {
            get
            {
                return _ResultsFile;
            }
            set
            {
                OnResultsFileChanging(value);
                ReportPropertyChanging("ResultsFile");
                _ResultsFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultsFile");
                OnResultsFileChanged();
            }
        }
        private global::System.String _ResultsFile;
        partial void OnResultsFileChanging(global::System.String value);
        partial void OnResultsFileChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="BiostatusOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BiostatusOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BiostatusOption object.
        /// </summary>
        /// <param name="biostatusOptionId">Initial value of the BiostatusOptionId property.</param>
        /// <param name="harvestScopeId">Initial value of the HarvestScopeId property.</param>
        public static BiostatusOption CreateBiostatusOption(global::System.Int32 biostatusOptionId, global::System.Int32 harvestScopeId)
        {
            BiostatusOption biostatusOption = new BiostatusOption();
            biostatusOption.BiostatusOptionId = biostatusOptionId;
            biostatusOption.HarvestScopeId = harvestScopeId;
            return biostatusOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BiostatusOptionId
        {
            get
            {
                return _BiostatusOptionId;
            }
            set
            {
                if (_BiostatusOptionId != value)
                {
                    OnBiostatusOptionIdChanging(value);
                    ReportPropertyChanging("BiostatusOptionId");
                    _BiostatusOptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BiostatusOptionId");
                    OnBiostatusOptionIdChanged();
                }
            }
        }
        private global::System.Int32 _BiostatusOptionId;
        partial void OnBiostatusOptionIdChanging(global::System.Int32 value);
        partial void OnBiostatusOptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HarvestScopeId
        {
            get
            {
                return _HarvestScopeId;
            }
            set
            {
                OnHarvestScopeIdChanging(value);
                ReportPropertyChanging("HarvestScopeId");
                _HarvestScopeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HarvestScopeId");
                OnHarvestScopeIdChanged();
            }
        }
        private global::System.Int32 _HarvestScopeId;
        partial void OnHarvestScopeIdChanging(global::System.Int32 value);
        partial void OnHarvestScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Present
        {
            get
            {
                return _Present;
            }
            set
            {
                OnPresentChanging(value);
                ReportPropertyChanging("Present");
                _Present = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Present");
                OnPresentChanged();
            }
        }
        private Nullable<global::System.Boolean> _Present;
        partial void OnPresentChanging(Nullable<global::System.Boolean> value);
        partial void OnPresentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Absent
        {
            get
            {
                return _Absent;
            }
            set
            {
                OnAbsentChanging(value);
                ReportPropertyChanging("Absent");
                _Absent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Absent");
                OnAbsentChanged();
            }
        }
        private Nullable<global::System.Boolean> _Absent;
        partial void OnAbsentChanging(Nullable<global::System.Boolean> value);
        partial void OnAbsentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Uncertain
        {
            get
            {
                return _Uncertain;
            }
            set
            {
                OnUncertainChanging(value);
                ReportPropertyChanging("Uncertain");
                _Uncertain = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Uncertain");
                OnUncertainChanged();
            }
        }
        private Nullable<global::System.Boolean> _Uncertain;
        partial void OnUncertainChanging(Nullable<global::System.Boolean> value);
        partial void OnUncertainChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Harvest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Harvest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Harvest object.
        /// </summary>
        /// <param name="harvestId">Initial value of the HarvestId property.</param>
        /// <param name="serviceUrl">Initial value of the ServiceUrl property.</param>
        public static Harvest CreateHarvest(global::System.Int32 harvestId, global::System.String serviceUrl)
        {
            Harvest harvest = new Harvest();
            harvest.HarvestId = harvestId;
            harvest.ServiceUrl = serviceUrl;
            return harvest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HarvestId
        {
            get
            {
                return _HarvestId;
            }
            set
            {
                if (_HarvestId != value)
                {
                    OnHarvestIdChanging(value);
                    ReportPropertyChanging("HarvestId");
                    _HarvestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HarvestId");
                    OnHarvestIdChanged();
                }
            }
        }
        private global::System.Int32 _HarvestId;
        partial void OnHarvestIdChanging(global::System.Int32 value);
        partial void OnHarvestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceUrl
        {
            get
            {
                return _ServiceUrl;
            }
            set
            {
                OnServiceUrlChanging(value);
                ReportPropertyChanging("ServiceUrl");
                _ServiceUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServiceUrl");
                OnServiceUrlChanged();
            }
        }
        private global::System.String _ServiceUrl;
        partial void OnServiceUrlChanging(global::System.String value);
        partial void OnServiceUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IntervalDays
        {
            get
            {
                return _IntervalDays;
            }
            set
            {
                OnIntervalDaysChanging(value);
                ReportPropertyChanging("IntervalDays");
                _IntervalDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntervalDays");
                OnIntervalDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _IntervalDays;
        partial void OnIntervalDaysChanging(Nullable<global::System.Int32> value);
        partial void OnIntervalDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastHarvest
        {
            get
            {
                return _LastHarvest;
            }
            set
            {
                OnLastHarvestChanging(value);
                ReportPropertyChanging("LastHarvest");
                _LastHarvest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastHarvest");
                OnLastHarvestChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastHarvest;
        partial void OnLastHarvestChanging(Nullable<global::System.DateTime> value);
        partial void OnLastHarvestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HarvestScopeId
        {
            get
            {
                return _HarvestScopeId;
            }
            set
            {
                OnHarvestScopeIdChanging(value);
                ReportPropertyChanging("HarvestScopeId");
                _HarvestScopeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HarvestScopeId");
                OnHarvestScopeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HarvestScopeId;
        partial void OnHarvestScopeIdChanging(Nullable<global::System.Int32> value);
        partial void OnHarvestScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastHarvestStopPage
        {
            get
            {
                return _LastHarvestStopPage;
            }
            set
            {
                OnLastHarvestStopPageChanging(value);
                ReportPropertyChanging("LastHarvestStopPage");
                _LastHarvestStopPage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastHarvestStopPage");
                OnLastHarvestStopPageChanged();
            }
        }
        private Nullable<global::System.Int32> _LastHarvestStopPage;
        partial void OnLastHarvestStopPageChanging(Nullable<global::System.Int32> value);
        partial void OnLastHarvestStopPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastHarvestNameCount
        {
            get
            {
                return _LastHarvestNameCount;
            }
            set
            {
                OnLastHarvestNameCountChanging(value);
                ReportPropertyChanging("LastHarvestNameCount");
                _LastHarvestNameCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastHarvestNameCount");
                OnLastHarvestNameCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LastHarvestNameCount;
        partial void OnLastHarvestNameCountChanging(Nullable<global::System.Int32> value);
        partial void OnLastHarvestNameCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="HarvestScope")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HarvestScope : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HarvestScope object.
        /// </summary>
        /// <param name="harvestScopeId">Initial value of the HarvestScopeId property.</param>
        public static HarvestScope CreateHarvestScope(global::System.Int32 harvestScopeId)
        {
            HarvestScope harvestScope = new HarvestScope();
            harvestScope.HarvestScopeId = harvestScopeId;
            return harvestScope;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HarvestScopeId
        {
            get
            {
                return _HarvestScopeId;
            }
            set
            {
                if (_HarvestScopeId != value)
                {
                    OnHarvestScopeIdChanging(value);
                    ReportPropertyChanging("HarvestScopeId");
                    _HarvestScopeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HarvestScopeId");
                    OnHarvestScopeIdChanged();
                }
            }
        }
        private global::System.Int32 _HarvestScopeId;
        partial void OnHarvestScopeIdChanging(global::System.Int32 value);
        partial void OnHarvestScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AcceptedNamesOnly
        {
            get
            {
                return _AcceptedNamesOnly;
            }
            set
            {
                OnAcceptedNamesOnlyChanging(value);
                ReportPropertyChanging("AcceptedNamesOnly");
                _AcceptedNamesOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedNamesOnly");
                OnAcceptedNamesOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _AcceptedNamesOnly;
        partial void OnAcceptedNamesOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnAcceptedNamesOnlyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="HarvestScopeBiostatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HarvestScopeBiostatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HarvestScopeBiostatus object.
        /// </summary>
        /// <param name="harvestScopeId">Initial value of the HarvestScopeId property.</param>
        /// <param name="biostatusOptionId">Initial value of the BiostatusOptionId property.</param>
        public static HarvestScopeBiostatus CreateHarvestScopeBiostatus(global::System.Int32 harvestScopeId, global::System.Int32 biostatusOptionId)
        {
            HarvestScopeBiostatus harvestScopeBiostatus = new HarvestScopeBiostatus();
            harvestScopeBiostatus.HarvestScopeId = harvestScopeId;
            harvestScopeBiostatus.BiostatusOptionId = biostatusOptionId;
            return harvestScopeBiostatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HarvestScopeId
        {
            get
            {
                return _HarvestScopeId;
            }
            set
            {
                if (_HarvestScopeId != value)
                {
                    OnHarvestScopeIdChanging(value);
                    ReportPropertyChanging("HarvestScopeId");
                    _HarvestScopeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HarvestScopeId");
                    OnHarvestScopeIdChanged();
                }
            }
        }
        private global::System.Int32 _HarvestScopeId;
        partial void OnHarvestScopeIdChanging(global::System.Int32 value);
        partial void OnHarvestScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BiostatusOptionId
        {
            get
            {
                return _BiostatusOptionId;
            }
            set
            {
                if (_BiostatusOptionId != value)
                {
                    OnBiostatusOptionIdChanging(value);
                    ReportPropertyChanging("BiostatusOptionId");
                    _BiostatusOptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BiostatusOptionId");
                    OnBiostatusOptionIdChanged();
                }
            }
        }
        private global::System.Int32 _BiostatusOptionId;
        partial void OnBiostatusOptionIdChanging(global::System.Int32 value);
        partial void OnBiostatusOptionIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="HarvestScopeName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HarvestScopeName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HarvestScopeName object.
        /// </summary>
        /// <param name="harvestScopeNameId">Initial value of the HarvestScopeNameId property.</param>
        public static HarvestScopeName CreateHarvestScopeName(global::System.Int32 harvestScopeNameId)
        {
            HarvestScopeName harvestScopeName = new HarvestScopeName();
            harvestScopeName.HarvestScopeNameId = harvestScopeNameId;
            return harvestScopeName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HarvestScopeNameId
        {
            get
            {
                return _HarvestScopeNameId;
            }
            set
            {
                if (_HarvestScopeNameId != value)
                {
                    OnHarvestScopeNameIdChanging(value);
                    ReportPropertyChanging("HarvestScopeNameId");
                    _HarvestScopeNameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HarvestScopeNameId");
                    OnHarvestScopeNameIdChanged();
                }
            }
        }
        private global::System.Int32 _HarvestScopeNameId;
        partial void OnHarvestScopeNameIdChanging(global::System.Int32 value);
        partial void OnHarvestScopeNameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HarvestScopeId
        {
            get
            {
                return _HarvestScopeId;
            }
            set
            {
                OnHarvestScopeIdChanging(value);
                ReportPropertyChanging("HarvestScopeId");
                _HarvestScopeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HarvestScopeId");
                OnHarvestScopeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HarvestScopeId;
        partial void OnHarvestScopeIdChanging(Nullable<global::System.Int32> value);
        partial void OnHarvestScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NZORNameId
        {
            get
            {
                return _NZORNameId;
            }
            set
            {
                OnNZORNameIdChanging(value);
                ReportPropertyChanging("NZORNameId");
                _NZORNameId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NZORNameId");
                OnNZORNameIdChanged();
            }
        }
        private global::System.String _NZORNameId;
        partial void OnNZORNameIdChanging(global::System.String value);
        partial void OnNZORNameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Name")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Name : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Name object.
        /// </summary>
        /// <param name="nZORId">Initial value of the NZORId property.</param>
        public static Name CreateName(global::System.String nZORId)
        {
            Name name = new Name();
            name.NZORId = nZORId;
            return name;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NZORId
        {
            get
            {
                return _NZORId;
            }
            set
            {
                if (_NZORId != value)
                {
                    OnNZORIdChanging(value);
                    ReportPropertyChanging("NZORId");
                    _NZORId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NZORId");
                    OnNZORIdChanged();
                }
            }
        }
        private global::System.String _NZORId;
        partial void OnNZORIdChanging(global::System.String value);
        partial void OnNZORIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxonRank
        {
            get
            {
                return _TaxonRank;
            }
            set
            {
                OnTaxonRankChanging(value);
                ReportPropertyChanging("TaxonRank");
                _TaxonRank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxonRank");
                OnTaxonRankChanged();
            }
        }
        private global::System.String _TaxonRank;
        partial void OnTaxonRankChanging(global::System.String value);
        partial void OnTaxonRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GoverningCode
        {
            get
            {
                return _GoverningCode;
            }
            set
            {
                OnGoverningCodeChanging(value);
                ReportPropertyChanging("GoverningCode");
                _GoverningCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GoverningCode");
                OnGoverningCodeChanged();
            }
        }
        private global::System.String _GoverningCode;
        partial void OnGoverningCodeChanging(global::System.String value);
        partial void OnGoverningCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Authors
        {
            get
            {
                return _Authors;
            }
            set
            {
                OnAuthorsChanging(value);
                ReportPropertyChanging("Authors");
                _Authors = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Authors");
                OnAuthorsChanged();
            }
        }
        private global::System.String _Authors;
        partial void OnAuthorsChanging(global::System.String value);
        partial void OnAuthorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AcceptedNameId
        {
            get
            {
                return _AcceptedNameId;
            }
            set
            {
                OnAcceptedNameIdChanging(value);
                ReportPropertyChanging("AcceptedNameId");
                _AcceptedNameId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AcceptedNameId");
                OnAcceptedNameIdChanged();
            }
        }
        private global::System.String _AcceptedNameId;
        partial void OnAcceptedNameIdChanging(global::System.String value);
        partial void OnAcceptedNameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentNameId
        {
            get
            {
                return _ParentNameId;
            }
            set
            {
                OnParentNameIdChanging(value);
                ReportPropertyChanging("ParentNameId");
                _ParentNameId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentNameId");
                OnParentNameIdChanged();
            }
        }
        private global::System.String _ParentNameId;
        partial void OnParentNameIdChanging(global::System.String value);
        partial void OnParentNameIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="NameProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NameProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NameProvider object.
        /// </summary>
        /// <param name="nZORId">Initial value of the NZORId property.</param>
        /// <param name="providerId">Initial value of the ProviderId property.</param>
        public static NameProvider CreateNameProvider(global::System.String nZORId, global::System.String providerId)
        {
            NameProvider nameProvider = new NameProvider();
            nameProvider.NZORId = nZORId;
            nameProvider.ProviderId = providerId;
            return nameProvider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NZORId
        {
            get
            {
                return _NZORId;
            }
            set
            {
                if (_NZORId != value)
                {
                    OnNZORIdChanging(value);
                    ReportPropertyChanging("NZORId");
                    _NZORId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NZORId");
                    OnNZORIdChanged();
                }
            }
        }
        private global::System.String _NZORId;
        partial void OnNZORIdChanging(global::System.String value);
        partial void OnNZORIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderId
        {
            get
            {
                return _ProviderId;
            }
            set
            {
                if (_ProviderId != value)
                {
                    OnProviderIdChanging(value);
                    ReportPropertyChanging("ProviderId");
                    _ProviderId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProviderId");
                    OnProviderIdChanged();
                }
            }
        }
        private global::System.String _ProviderId;
        partial void OnProviderIdChanging(global::System.String value);
        partial void OnProviderIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="NameRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NameRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NameRequest object.
        /// </summary>
        /// <param name="nameRequestId">Initial value of the NameRequestId property.</param>
        public static NameRequest CreateNameRequest(global::System.String nameRequestId)
        {
            NameRequest nameRequest = new NameRequest();
            nameRequest.NameRequestId = nameRequestId;
            return nameRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameRequestId
        {
            get
            {
                return _NameRequestId;
            }
            set
            {
                if (_NameRequestId != value)
                {
                    OnNameRequestIdChanging(value);
                    ReportPropertyChanging("NameRequestId");
                    _NameRequestId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameRequestId");
                    OnNameRequestIdChanged();
                }
            }
        }
        private global::System.String _NameRequestId;
        partial void OnNameRequestIdChanging(global::System.String value);
        partial void OnNameRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateRequested
        {
            get
            {
                return _DateRequested;
            }
            set
            {
                OnDateRequestedChanging(value);
                ReportPropertyChanging("DateRequested");
                _DateRequested = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRequested");
                OnDateRequestedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateRequested;
        partial void OnDateRequestedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateRequestedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatchMatchId
        {
            get
            {
                return _BatchMatchId;
            }
            set
            {
                OnBatchMatchIdChanging(value);
                ReportPropertyChanging("BatchMatchId");
                _BatchMatchId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatchMatchId");
                OnBatchMatchIdChanged();
            }
        }
        private global::System.String _BatchMatchId;
        partial void OnBatchMatchIdChanging(global::System.String value);
        partial void OnBatchMatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderNameResults
        {
            get
            {
                return _ProviderNameResults;
            }
            set
            {
                OnProviderNameResultsChanging(value);
                ReportPropertyChanging("ProviderNameResults");
                _ProviderNameResults = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderNameResults");
                OnProviderNameResultsChanged();
            }
        }
        private global::System.String _ProviderNameResults;
        partial void OnProviderNameResultsChanging(global::System.String value);
        partial void OnProviderNameResultsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Provider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Provider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Provider object.
        /// </summary>
        /// <param name="providerId">Initial value of the ProviderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Provider CreateProvider(global::System.String providerId, global::System.String name)
        {
            Provider provider = new Provider();
            provider.ProviderId = providerId;
            provider.Name = name;
            return provider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderId
        {
            get
            {
                return _ProviderId;
            }
            set
            {
                if (_ProviderId != value)
                {
                    OnProviderIdChanging(value);
                    ReportPropertyChanging("ProviderId");
                    _ProviderId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProviderId");
                    OnProviderIdChanged();
                }
            }
        }
        private global::System.String _ProviderId;
        partial void OnProviderIdChanging(global::System.String value);
        partial void OnProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="settingId">Initial value of the SettingId property.</param>
        public static Setting CreateSetting(global::System.Int32 settingId)
        {
            Setting setting = new Setting();
            setting.SettingId = settingId;
            return setting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SettingId
        {
            get
            {
                return _SettingId;
            }
            set
            {
                if (_SettingId != value)
                {
                    OnSettingIdChanging(value);
                    ReportPropertyChanging("SettingId");
                    _SettingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SettingId");
                    OnSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _SettingId;
        partial void OnSettingIdChanging(global::System.Int32 value);
        partial void OnSettingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }

    #endregion
    
}
